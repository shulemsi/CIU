% Solve a Pattern Recognition Problem with a Neural Network
% Script generated by Neural Pattern Recognition app
% Created 20-Nov-2018 10:14:10
%
% This script assumes these variables are defined:
%
%   irisInputs - input data.
%   irisTargets - target data.
%RandStream.setGlobalStream (RandStream ('mrg32k3a','Seed', 1234));

%Load workspace before running the code
x = irisInputs;
t = irisTargets;

% Choose a Training Function
% For a list of all training functions type: help nntrain
% 'trainlm' is usually fastest.
% 'trainbr' takes longer but may be better for challenging problems.
% 'trainscg' uses less memory. Suitable in low memory situations.
trainFcn = 'trainscg';  % Scaled conjugate gradient backpropagation.

% Create a Pattern Recognition Network
hiddenLayerSize = 10;
net = patternnet(hiddenLayerSize, trainFcn);
net1 = patternnet(hiddenLayerSize, trainFcn);
net2 = patternnet(hiddenLayerSize, trainFcn);
net3 = patternnet(hiddenLayerSize, trainFcn);
net4 = patternnet(hiddenLayerSize, trainFcn);
% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;

% train each feature

set1 = irisInputs(1,:);
set2 = irisInputs(2,:);
set3 = irisInputs(3,:);
set4 = irisInputs(4,:);

% Train the Network
[net,tr] = train(net,x,t);

[net1,tb] = train(net1,set1,t);
[net2,tc] = train(net2,set2,t);
[net3,td] = train(net3,set3,t);
[net4,te] = train(net4,set4,t);

% net.initFcn='initlay'; Related to random num

% Test the Network
y = net(x);
e = gsubtract(t,y);
performance = perform(net,t,y);
tind = vec2ind(t);
yind = vec2ind(y);
percentErrors = sum(tind ~= yind)/numel(tind);

% Feature Petal length random values tested
a1 = (7.9-4.3).*rand(150,1) + 4.3;
a1 = a1(:)';
predictionsfeature1 = round((net1(a1)),2);
cmin1=findmin(predictionsfeature1');
cmax1=findmax(predictionsfeature1');

%Feature contextual min and max values obtained by variying the input

all=[cmin1(1:1); cmax1(1:1); cmin1(2:2); cmax1(2:2); cmin1(3:3); cmax1(3:3)];


%Feature Petal Width
a2 = (2.0-4.4).*rand(150,1) + 4.4;
a2 = a2(:)';
predictionsfeature2 = round(net2(a2),2);
cmin2=findmin(predictionsfeature2');
cmax2=findmax(predictionsfeature2');

%contextual min and max values obtained by variying the input

all2=[cmin2(1:1); cmax2(1:1); cmin2(2:2); cmax2(2:2); cmin2(3:3); cmax2(3:3)];


% Feature Sepal Length
a3 = 1 + (6.9-1).*rand(150,1);
a3 = a3(:)';
predictionsfeature3 = round(net3(a3),2);
cmin3=findmin(predictionsfeature3');
cmax3=findmax(predictionsfeature3');

%contextual min and max values obtained by variying the input

all3=[cmin3(1:1); cmax3(1:1); cmin3(2:2); cmax3(2:2); cmin3(3:3); cmax3(3:3)];

% Feature Sepal Width
a4 = 0.1 + (2.5-0.1).*rand(150,1);
a4 = a4(:)';
predictionsfeature4 = round(net4(a4),2);
cmin4=findmin(predictionsfeature4');
cmax4=findmax(predictionsfeature4');

%contextual min and max values obtained by variying the input

all4=[cmin4(1:1); cmax4(1:1); cmin4(2:2); cmax4(2:2); cmin4(3:3); cmax4(3:3)];


allmin=[cmin1(1:1) cmin2(1:1) cmin3(1:1) cmin4(1:1);
        cmin1(2:2) cmin2(2:2) cmin3(2:2) cmin4(2:2);
        cmin1(3:3) cmin2(3:3) cmin3(3:3) cmin4(3:3)];

allmax=[cmax1(1:1) cmax2(1:1) cmax3(1:1) cmax4(1:1);
        cmax1(2:2) cmax2(2:2) cmax3(2:2) cmax4(2:2);
        cmax1(3:3) cmax2(3:3) cmax3(3:3) cmax4(3:3)];    
    
a4fit1 =round(predictionsfeature4(1,:)*100);
a4fit2 =round(predictionsfeature4(2,:)*100);
a4fit3 =round(predictionsfeature4(3,:)*100);


CI=findCI(allmin, allmax);
importancevalues=CI';

%Converting values to text
importancestr= string(zeros(size(importancevalues)));
for i = 1:numel(importancevalues)
    
    if (importancevalues(i) >= 0) && (importancevalues(i) < 0.25)
        importancestr(i)='not an important';
    elseif (importancevalues(i) >= 0.25) && (importancevalues(i) < 0.50)
        importancestr(i)='an important';
    elseif (importancevalues(i) >= 0.50) && (importancevalues(i) < 0.75)
        importancestr(i)='rather an important';
    else
        importancestr(i)='a highly important';
    end
end

%Testing: For manually entring press Y and for auto generated inputs press A.
reply = input('(M) for manually entring the input values, (A) for auto generated inputs: ','s');
        
        if strcmp(reply,'M')
  
        % user input
        petalength = 'Petal length(4.3-7.9)= ';
        feature1 = input(petalength);

        petalwidth = 'Petal width(2.0-4.4)= ';
        feature2 = input(petalwidth);

        sepalength = 'Sepal length(1.0-6.9)= ';
        feature3 = input(sepalength);

        sepalwidth = 'Sepal width(0.1-2.5)= ';
        feature4 = input(sepalwidth);

        else
          feature1 = (7.9-4.3).*rand(1,1) + 4.3;
          feature2 = (2.0-4.4).*rand(1,1) + 4.4;
          feature3 = 0.1 + (2.5-0.1).*rand(1,1);
          feature4 = 1 + (6.9-1).*rand(1,1);

        end 
        
featuresinput=[feature1; feature2; feature3; feature4];
featurestest=net(featuresinput);
class = max(featurestest);

if class == featurestest(1)
    classname='Iris Setosa';
elseif class == featurestest(2)
    classname='Iris Versicolor';
else
    classname='Iris Virginica';
end

f1con = zeros (1,150);
f1con(1) = feature1;
f1test=round(net1(f1con),2);

f2con = zeros (1,150);
f2con(1) = feature2;
f2test=round(net2(f2con),2);

f3con = zeros (1,150);
f3con(1) = feature3;
f3test=round(net3(f3con),2);

f4con = zeros (1,150);
f4con(1) = feature4;
f4test=round(net4(f4con),2);


n2=[f1test(1:3); f2test(1:3); f3test(1:3); f4test(1:3)]';

% Calculating contextual utility values
 CU=findCU(n2, allmin, allmax);
 utilityvalues=CU';

utilitystr= string(zeros(size(utilityvalues)));
for j = 1:numel(utilityvalues)
    
    if (utilityvalues(j) >= 0) && (utilityvalues(j) < 0.25)
        utilitystr(j)='not a typical';
    elseif (utilityvalues(j) >= 0.25) && (utilityvalues(j) < 0.50)
        utilitystr(j)='an unlikely';
    elseif (utilityvalues(j) >= 0.50) && (utilityvalues(j) < 0.75)
        utilitystr(j)='a typical';
    else
        utilitystr(j)='a very typical';
    end
end
classprediction = round(class*100);
cprintf ('*Black','The model`s prediction is %d%% %s. Because;\n', classprediction, classname);

featuresname = ["petal length";
    "petal width";
    "sepal length";
    "sepal width"];

importancevalues2=round(importancevalues*100);
utilityvalues2=round(utilityvalues,2);

strclass1=[featuresname importancestr(1:4)' utilitystr(1:4)' importancevalues2(1:4)' utilityvalues2(1:4)'];
strclass2=[featuresname importancestr(5:8)' utilitystr(5:8)' importancevalues2(5:8)' utilityvalues2(5:8)'];
strclass3=[featuresname importancestr(9:12)' utilitystr(9:12)' importancevalues2(9:12)' utilityvalues2(9:12)'];


%class1
if class == featurestest(1)
    features1=[importancevalues(1:1); importancevalues(2:2); importancevalues(3:3); importancevalues(4:4)];
    
    %features1=[f1test(1); f2test(1); f3test(1); f4test(1)];
    maxfeature = max(features1);
    if maxfeature==importancevalues(1:1)
        contributor='petal length';
        importance=importancestr(1:1);
        utility=utilitystr(1:1);
    elseif maxfeature==importancevalues(2:2)
        contributor='petal width';
        importance=importancestr(2:2);
        utility=utilitystr(2:2);
    elseif maxfeature==importancevalues(3:3)
        contributor='sepal length';
        importance=importancestr(3:3);
        utility=utilitystr(3:3);
    else
        contributor='sepal width';
        importance=importancestr(4:4);
        utility=utilitystr(4:4);
    end
    
    
    cprintf ('text','The');
    cprintf ('*Comments',' %s ',strclass1(1:1));
    cprintf ('text',' which is ');
    cprintf ('*Comments','%s (CI=%s%%) ',strclass1(5:5),strclass1(13:13));
    cprintf ('text', 'feature has ');
    cprintf ('*Comments', '%s (CU=%s) ', strclass1(9:9),strclass1(17:17));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('*Comments',' %s ',strclass1(2:2));
    cprintf ('text',' which is ');
    cprintf ('*Comments','%s (CI=%s%%) ',strclass1(6:6),strclass1(14:14));
    cprintf ('text', 'feature has ');
    cprintf ('*Comments', '%s (CU=%s) ', strclass1(10:10),strclass1(18:18));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('*Comments',' %s ',strclass1(3:3));
    cprintf ('text',' which is ');
    cprintf ('*Comments','%s (CI=%s%%)',strclass1(7:7),strclass1(15:15));
    cprintf ('text', 'feature has ');
    cprintf ('*Comments', '%s (CU=%s) ', strclass1(11:11),strclass1(19:19));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('*Comments',' %s ',strclass1(4:4));
    cprintf ('text',' which is ');
    cprintf ('*Comments','%s (CI=%s%%) ',strclass1(8:8),strclass1(16:16));
    cprintf ('text', 'feature has ');
    cprintf ('*Comments', '%s (CU=%s) ', strclass1(12:12),strclass1(20:20));
    cprintf ('text', 'size.\n');
    
    cprintf ('*black','And the biggest contributing feature is the %s.\n\n', contributor);
    
    classprediction2 = round(featurestest(2)*100);
    cprintf ('*black','It is not Iris Versicolor(%d%%), because; \n', classprediction2);
    
    %Why not explanations 1
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass2(1:1));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass2(5:5));
    cprintf ('text','(CI=%s%%) ',strclass2(13:13));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass2(9:9));
    cprintf ('text','(CU=%s) ',strclass2(17:17));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass2(2:2));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass2(6:6));
    cprintf ('text','(CI=%s%%) ',strclass2(14:14));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass2(10:10));
    cprintf ('text','(CU=%s) ',strclass2(18:18));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass2(3:3));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass2(7:7));
    cprintf ('text','(CI=%s%%) ',strclass2(15:15));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass2(11:11));
    cprintf ('text','(CU=%s) ',strclass2(19:19));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass2(4:4));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass2(8:8));
    cprintf ('text','(CI=%s%%) ',strclass2(16:16));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass2(12:12));
    cprintf ('text','(CU=%s) ',strclass2(20:20));
    cprintf ('text', 'size.\n');
    
    classprediction3 = round(featurestest(3)*100);
    cprintf ('*black','It is not Iris Virginica(%d%%), because; \n', classprediction3);
    
    %Why not explanations 2
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass3(1:1));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass3(5:5));
    cprintf ('text','(CI=%s%%) ',strclass3(13:13));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass3(9:9));
    cprintf ('text','(CU=%s) ',strclass3(17:17));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass3(2:2));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass3(6:6));
    cprintf ('text','(CI=%s%%) ',strclass3(14:14));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass3(10:10));
    cprintf ('text','(CU=%s) ',strclass3(18:18));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass3(3:3));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass3(7:7));
    cprintf ('text','(CI=%s%%) ',strclass3(15:15));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass3(11:11));
    cprintf ('text','(CU=%s) ',strclass3(19:19));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass3(4:4));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass3(8:8));
    cprintf ('text','(CI=%s%%) ',strclass3(16:16));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass3(12:12));
    cprintf ('text','(CU=%s) ',strclass3(20:20));
    cprintf ('text', 'size.\n');
    
    %----------------------------
    
    %class2
elseif class == featurestest(2)
    features1=[importancevalues(5:5); importancevalues(6:6); importancevalues(7:7); importancevalues(8:8)];
    %features1=[f1test(2); f2test(2); f3test(2); f4test(2)];
    maxfeature = max(features1);
    if maxfeature==importancevalues(5:5)
        contributor='petal length';
        importance=importancestr(5:5);
        utility=utilitystr(5:5);
    elseif maxfeature==importancevalues(6:6)
        contributor='petal width';
        importance=importancestr(6:6);
        utility=utilitystr(6:6);
    elseif maxfeature==importancevalues(7:7)
        contributor='sepal length';
        importance=importancestr(7:7);
        utility=utilitystr(7:7);
    else
        contributor='sepal width';
        importance=importancestr(8:8);
        utility=utilitystr(8:8);
    end
    
    cprintf ('text','The');
    cprintf ('*Comments',' %s ',strclass2(1:1));
    cprintf ('text',' which is ');
    cprintf ('*Comments','%s (CI=%s%%) ',strclass2(5:5),strclass2(13:13));
    cprintf ('text', 'feature has ');
    cprintf ('*Comments', '%s (CU=%s) ', strclass2(9:9),strclass2(17:17));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('*Comments',' %s ',strclass2(2:2));
    cprintf ('text',' which is ');
    cprintf ('*Comments','%s (CI=%s%%) ',strclass2(6:6),strclass2(14:14));
    cprintf ('text', 'feature has ');
    cprintf ('*Comments', '%s (CU=%s) ', strclass2(10:10),strclass2(18:18));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('*Comments',' %s ',strclass2(3:3));
    cprintf ('text',' which is ');
    cprintf ('*Comments','%s (CI=%s%%) ',strclass2(7:7),strclass2(15:15));
    cprintf ('text', 'feature has ');
    cprintf ('*Comments', '%s (CU=%s) ', strclass2(11:11),strclass2(19:19));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('*Comments',' %s ',strclass2(4:4));
    cprintf ('text',' which is ');
    cprintf ('*Comments','%s (CI=%s%%) ',strclass2(8:8),strclass2(16:16));
    cprintf ('text', 'feature has ');
    cprintf ('*Comments', '%s (CU=%s) ', strclass2(12:12),strclass2(20:20));
    cprintf ('text', 'size.\n');
    
    cprintf ('*black','And the biggest contributing feature is the %s.\n\n', contributor);
    
    classprediction2 = round(featurestest(1)*100);
    cprintf ('*black','It is not Iris Setosa(%d%%), because; \n', classprediction2);
    %Why not explanations 1
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass1(1:1));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass1(5:5));
    cprintf ('text','(CI=%s%%) ',strclass1(13:13));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass1(9:9));
    cprintf ('text','(CU=%s) ',strclass1(17:17));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass1(2:2));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass1(6:6));
    cprintf ('text','(CI=%s%%) ',strclass1(14:14));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass1(10:10));
    cprintf ('text','(CU=%s) ',strclass1(18:18));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass1(3:3));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass1(7:7));
    cprintf ('text','(CI=%s%%) ',strclass1(15:15));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass1(11:11));
    cprintf ('text','(CU=%s) ',strclass1(19:19));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass1(4:4));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass1(8:8));
    cprintf ('text','(CI=%s%%) ',strclass1(16:16));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass1(12:12));
    cprintf ('text','(CU=%s) ',strclass1(20:20));
    cprintf ('text', 'size.\n');
    %------------------------
    
    classprediction3 = round(featurestest(3)*100);
    cprintf ('*black','It is not Iris Virginica(%d%%), because; \n', classprediction3);
    %Why not explanations 2
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass3(1:1));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass3(5:5));
    cprintf ('text','(CI=%s%%) ',strclass3(13:13));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass3(9:9));
    cprintf ('text','(CU=%s) ',strclass3(17:17));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass3(2:2));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass3(6:6));
    cprintf ('text','(CI=%s%%) ',strclass3(14:14));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass3(10:10));
    cprintf ('text','(CU=%s) ',strclass3(18:18));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass3(3:3));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass3(7:7));
    cprintf ('text','(CI=%s%%) ',strclass3(15:15));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass3(11:11));
    cprintf ('text','(CU=%s) ',strclass3(19:19));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass3(4:4));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass3(8:8));
    cprintf ('text','(CI=%s%%) ',strclass3(16:16));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass3(12:12));
    cprintf ('text','(CU=%s) ',strclass3(20:20));
    cprintf ('text', 'size.\n');
    %-----------------------
    %class3
else
    features1=[importancevalues(9:9); importancevalues(10:10); importancevalues(11:11); importancevalues(12:12)];
    %features1=[f1test(3); f2test(3); f3test(3); f4test(3)];
    maxfeature = max(features1);
    if maxfeature==importancevalues(9:9)
        contributor='petal length';
        importance=importancestr(9:9);
        utility=utilitystr(9:9);
    elseif maxfeature==importancevalues(10:10)
        contributor='petal width';
        importance=importancestr(10:10);
        utility=utilitystr(10:10);
    elseif maxfeature==importancevalues(11:11)
        contributor='sepal length';
        importance=importancestr(11:11);
        utility=utilitystr(11:11);
    else
        contributor='sepal width';
        importance=importancestr(12:12);
        utility=utilitystr(12:12);
    end
    
    cprintf ('text','The');
    cprintf ('*Comments',' %s ',strclass3(1:1));
    cprintf ('text',' which is ');
    cprintf ('*Comments','%s (CI=%s%%) ',strclass3(5:5),strclass3(13:13));
    cprintf ('text', 'feature has ');
    cprintf ('*Comments', '%s (CU=%s) ', strclass3(9:9),strclass3(17:17));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('*Comments',' %s ',strclass3(2:2));
    cprintf ('text',' which is ');
    cprintf ('*Comments','%s (CI=%s%%) ',strclass3(6:6),strclass3(14:14));
    cprintf ('text', 'feature has ');
    cprintf ('*Comments', '%s (CU=%s) ', strclass3(10:10),strclass3(18:18));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('*Comments',' %s ',strclass3(3:3));
    cprintf ('text',' which is ');
    cprintf ('*Comments','%s (CI=%s%%) ',strclass3(7:7),strclass3(15:15));
    cprintf ('text', 'feature has ');
    cprintf ('*Comments', '%s (CU=%s) ', strclass3(11:11),strclass3(19:19));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('*Comments',' %s ',strclass3(4:4));
    cprintf ('text',' which is ');
    cprintf ('*Comments','%s (CI=%s%%) ',strclass3(8:8),strclass3(16:16));
    cprintf ('text', 'feature has ');
    cprintf ('*Comments', '%s (CU=%s) ', strclass3(12:12),strclass3(20:20));
    cprintf ('text', 'size.\n');
    
    cprintf ('*black','And the biggest contributing feature is the %s.\n\n', contributor);
    
    classprediction2 = round(featurestest(1)*100);
    cprintf ('*black','It is not Iris Setosa(%d%%), because; \n', classprediction2);
    %Why not explanations 1
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass1(1:1));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass1(5:5));
    cprintf ('text','(CI=%s%%) ',strclass1(13:13));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass1(9:9));
    cprintf ('text','(CU=%s) ',strclass1(17:17));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass1(2:2));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass1(6:6));
    cprintf ('text','(CI=%s%%) ',strclass1(14:14));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass1(10:10));
    cprintf ('text','(CU=%s) ',strclass1(18:18));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass1(3:3));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass1(7:7));
    cprintf ('text','(CI=%s%%) ',strclass1(15:15));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass1(11:11));
    cprintf ('text','(CU=%s) ',strclass1(19:19));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass1(4:4));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass1(8:8));
    cprintf ('text','(CI=%s%%) ',strclass1(16:16));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass1(12:12));
    cprintf ('text','(CU=%s) ',strclass1(20:20));
    cprintf ('text', 'size.\n');
    %------------------------
    classprediction3 = round(featurestest(2)*100);
    cprintf ('*black','It is not Iris Versicolor(%d%%), because; \n', classprediction3);
    %Why not explanations 2
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass2(1:1));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass2(5:5));
    cprintf ('text','(CI=%s%%) ',strclass2(13:13));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass2(9:9));
    cprintf ('text','(CU=%s) ',strclass2(17:17));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass2(2:2));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass2(6:6));
    cprintf ('text','(CI=%s%%) ',strclass2(14:14));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass2(10:10));
    cprintf ('text','(CU=%s) ',strclass2(18:18));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass2(3:3));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass2(7:7));
    cprintf ('text','(CI=%s%%) ',strclass2(15:15));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass2(11:11));
    cprintf ('text','(CU=%s) ',strclass2(19:19));
    cprintf ('text', 'size.\n');
    
    cprintf ('text','The');
    cprintf ('err',' %s ',strclass2(4:4));
    cprintf ('text',' which is ');
    cprintf ('err','%s ',strclass2(8:8));
    cprintf ('text','(CI=%s%%) ',strclass2(16:16));
    cprintf ('text', 'feature has ');
    cprintf ('err', '%s ', strclass2(12:12));
    cprintf ('text','(CU=%s) ',strclass2(20:20));
    cprintf ('text', 'size.\n');
    
    %-----------------------
    
end


function p = findmin(n)
    p =  min(n);
end

function s = findmax(c)
    s =  max(c);
end

function calculateCI = findCI(mm, mx)
    calculateCI = (mx-mm)*100/100;
end

function calculateCU = findCU(n3, dymin, dymax)
    calculateCU = (n3-dymin)./(dymax-dymin);
end